# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # version: 17.10.0-ce
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      
      - image: circleci/python:3.6.1
        environment: 
            TEST_DATABASE_URL: mongodb://test:test@ds119446.mlab.com:19446/circlecitest
      - image: circleci/mongo:3.4     

      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

      # working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  # test:
  #   steps:
      - run:
          command: |
            . venv/bin/activate
            python test.py



  deploy:

    working_directory: /home/circleci/MIV
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Deploy to GAE
          command: |
            
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json
            # /opt/google-cloud-sdk/bin/
            # gcloud --quiet components update
            # /opt/google-cloud-sdk/bin/
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            # /opt/google-cloud-sdk/bin/
            gcloud config set project jslpskel
            
            gcloud -q app deploy app.yaml --promote --version=staging


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      # - test:
      #     requires:
      #       - build

      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master



     # - store_artifacts:
      #    path: test-reports
       #   destination: test-reports   
